{
  "0":[
    {
      "policyId":"7eb7f61e-df59-42d4-8236-7d012f278fa6",
      "policyType":"config",
      "cloudType":"aws",
      "severity":"medium",
      "name":"AWS Elastic Load Balancer (Classic) with connection draining disabled",
      "description":"This policy identifies Classic Elastic Load Balancers which have connection draining disabled. Connection Draining feature ensures that a Classic load balancer stops sending requests to instances that are de-registering or unhealthy, while keeping the existing connections open. This enables the load balancer to complete in-flight requests made to instances that are de-registering or unhealthy.",
      "rule.criteria":"cb2775f3-36e4-44c1-a1a9-7d24fdf95c31",
      "searchModel.query":"config where cloud.type = 'aws' AND api.name = 'aws-elb-describe-load-balancers' AND json.rule = 'attributes.connectionDraining.enabled is false'",
      "recommendation":"1. Sign into the AWS console\n2. In the console, select the specific region from region drop down on the top right corner, for which the alert is generated\n3. Navigate to EC2 dashboard\n4. Click on 'Load Balancers' (Left Panel)\n5. Select the reported ELB\n6. On the Instances tab, for 'Connection Draining', choose '(Edit)'\n7. On the 'Configure Connection Draining' popup dialog, select 'Enable Connection Draining'\n8. (Optional) For Timeout, type a value between 1 and 3,600 seconds\nNOTE: When you enable connection draining, you can specify a maximum time for the load balancer to keep connections alive before reporting the instance as de-registered. The maximum timeout value can be set between 1 and 3,600 seconds (the default is 300 seconds).\n9. Click on 'Save'",
      "remediable":false,
      "remediation.cliScriptTemplate":"",
      "remediation.description":"",
      "remediation.impact":"",
      "compliance.standard":"",
      "remediable_updated":true,
      "remediation.cliScriptTemplate_updated":"aws elb modify-load-balancer-attributes --load-balancer-name ${resourceName} --region ${region} --load-balancer-attributes \"{\\\"ConnectionDraining\\\":{\\\"Enabled\\\":true,\\\"Timeout\\\":300}}\"",
      "remediation.description_updated":"This CLI command requires 'elasticloadbalancing:ModifyLoadBalancerAttributes' permission. Successful execution will enable connection draining for the respective ELB.",
      "remediation.impact_updated":"Enable connection draining for the respective ELB"
    }
  ],
  "1":[
    {
      "policyId":"1f524c07-3254-45a0-8ad7-03e29242c499",
      "policyType":"config",
      "cloudType":"aws",
      "severity":"low",
      "name":"AWS RDS instance with copy tags to snapshots disabled",
      "description":"This policy identifies RDS instances which have copy tags to snapshots disabled. Copy tags to snapshots copies all the user-defined tags from the DB instance to snapshots. Copying tags allow you to add metadata and apply access policies to your Amazon RDS resources.",
      "rule.criteria":"56b18fc7-71e4-4932-aba6-71b9d0c6cf5d",
      "searchModel.query":"config where cloud.type = 'aws' AND api.name = 'aws-rds-describe-db-instances' AND json.rule = 'copyTagsToSnapshot is false or copyTagsToSnapshot does not exist'",
      "recommendation":"1. Sign into the AWS console\n2. In the console, select the specific region from region drop down on the top right corner, for which the alert is generated\n3. Navigate to Amazon RDS console\n4. Choose Instances, and then select the reported DB instance\n5. On 'Instance Actions' drop-down list, choose 'Modify'\n6. In 'Backup' section for the 'Copy tags to snapshots', select 'Yes'\n7. Click on 'Continue'\n8. On the 'Summary of Modifications' panel, review the configuration changes. From 'Scheduling of Modifications' section, select whether changes to 'Apply immediately' or 'Apply during the next scheduled maintenance window'.\n9. On the confirmation page, Review the changes and Click on 'Modify DB Instance' to save your changes.",
      "remediable":false,
      "remediation.cliScriptTemplate":"",
      "remediation.description":"",
      "remediation.impact":"",
      "compliance.standard":"",
      "remediable_updated":true,
      "remediation.cliScriptTemplate_updated":"aws rds modify-db-instance --region ${region} --db-instance-identifier ${resourceName} --copy-tags-to-snapshot --apply-immediately",
      "remediation.description_updated":"This CLI command requires 'rds:ModifyDBInstance' permission. Successful execution will enable 'copy tags to snapshots' for the respective RDS.",
      "remediation.impact_updated":"Enable copy tags to snapshots for the respective RDS"
    }
  ],
  "2":[
    {
      "policyId":"65daa6a0-e040-434e-aca3-9d5765c96e7c",
      "policyType":"config",
      "cloudType":"aws",
      "severity":"high",
      "name":"AWS Security Groups allow internet traffic from internet to MYSQL port (3306)",
      "description":"This policy identifies the security groups which are exposing MYSQL port (3306) to the internet. It is recommended that Global permission to access the well known services MYSQL port (3306) should not be allowed in a security group.",
      "rule.criteria":"9525707a-38e6-4689-a960-87125b96d1ab",
      "searchModel.query":"config where cloud.type = 'aws' AND api.name='aws-ec2-describe-security-groups' AND json.rule = (((ipPermissions[?(@.toPort > 3306 && @.fromPort < 3306)].ipRanges[*] contains 0.0.0.0\/0) or (ipPermissions[?(@.toPort == 3306 || @.fromPort == 3306)].ipRanges[*] contains 0.0.0.0\/0)) or ((ipPermissions[?(@.toPort > 3306 && @.fromPort < 3306)].ipv6Ranges[*].cidrIpv6 contains ::\/0) or (ipPermissions[?(@.toPort == 3306 || @.fromPort == 3306)].ipv6Ranges[*].cidrIpv6 contains ::\/0)))",
      "recommendation":"If the Security Groups reported indeed need to restrict all traffic, follow the instructions below:\n\n1. Login to the AWS Console and navigate to the 'VPC' service\n2. Select the 'Security Group' reported in the alert. Click on the 'Inbound Rule'\n3. Remove the rule which has 'Source' value as 0.0.0.0\/0 or ::\/0 and 'Port Range' value as 3306 (or range containing 3306)",
      "remediable":false,
      "remediation.cliScriptTemplate":"",
      "remediation.description":"",
      "remediation.impact":"",
      "compliance.standard":[
        "MITRE ATT&CK [Beta]",
        "PIPEDA",
        "CCPA 2018"
      ],
      "searchModel.query_updated":"config where cloud.type = 'aws' AND api.name='aws-ec2-describe-security-groups' AND json.rule = (((ipPermissions[?(@.toPort > 3306 && @.fromPort < 3306)].ipRanges[*] contains 0.0.0.0\/0) or (ipPermissions[?(@.toPort == 3306 || @.fromPort == 3306)].ipRanges[*] contains 0.0.0.0\/0)) or ((ipPermissions[?(@.toPort > 3306 && @.fromPort < 3306)].ipv6Ranges[*].cidrIpv6 contains ::\/0) or (ipPermissions[?(@.toPort == 3306 || @.fromPort == 3306)].ipv6Ranges[*].cidrIpv6 contains ::\/0))) and isShared is false"
    }
  ],
  "3":[
    {
      "policyId":"c2074d5a-aa28-4dde-90c1-82f528cec55e",
      "policyType":"config",
      "cloudType":"aws",
      "severity":"high",
      "name":"AWS Security Groups allow internet traffic from internet to SMTP port (25)",
      "description":"This policy identifies the security groups which are exposing SMTP port (25) to the internet. It is recommended that Global permission to access the well known services SMTP port (25) should not be allowed in a security group.",
      "rule.criteria":"c39b5211-fc86-48bc-babb-c2ce5509ede3",
      "searchModel.query":"config where cloud.type = 'aws' AND api.name='aws-ec2-describe-security-groups' AND json.rule = (((ipPermissions[?(@.toPort > 25 && @.fromPort < 25)].ipRanges[*] contains 0.0.0.0\/0) or (ipPermissions[?(@.toPort == 25 || @.fromPort == 25)].ipRanges[*] contains 0.0.0.0\/0)) or ((ipPermissions[?(@.toPort > 25 && @.fromPort < 25)].ipv6Ranges[*].cidrIpv6 contains ::\/0) or (ipPermissions[?(@.toPort == 25 || @.fromPort == 25)].ipv6Ranges[*].cidrIpv6 contains ::\/0)))",
      "recommendation":"If the Security Groups reported indeed need to restrict all traffic, follow the instructions below:\n\n1. Login to the AWS Console and navigate to the 'VPC' service\n2. Select the 'Security Group' reported in the alert. Click on the 'Inbound Rule'\n3. Remove the rule which has 'Source' value as 0.0.0.0\/0 or ::\/0 and 'Port Range' value as 25 (or range containing 25)",
      "remediable":false,
      "remediation.cliScriptTemplate":"",
      "remediation.description":"",
      "remediation.impact":"",
      "compliance.standard":[
        "MITRE ATT&CK [Beta]",
        "PIPEDA",
        "CCPA 2018"
      ],
      "searchModel.query_updated":"config where cloud.type = 'aws' AND api.name='aws-ec2-describe-security-groups' AND json.rule = (((ipPermissions[?(@.toPort > 25 && @.fromPort < 25)].ipRanges[*] contains 0.0.0.0\/0) or (ipPermissions[?(@.toPort == 25 || @.fromPort == 25)].ipRanges[*] contains 0.0.0.0\/0)) or ((ipPermissions[?(@.toPort > 25 && @.fromPort < 25)].ipv6Ranges[*].cidrIpv6 contains ::\/0) or (ipPermissions[?(@.toPort == 25 || @.fromPort == 25)].ipv6Ranges[*].cidrIpv6 contains ::\/0))) and isShared is false"
    }
  ],
  "4":[
    {
      "policyId":"2dbda57f-33d4-459a-97ae-dec7e81f9ec4",
      "policyType":"config",
      "cloudType":"aws",
      "severity":"high",
      "name":"AWS Security groups allow internet traffic",
      "description":"This policy identifies that Security Groups do not allow all traffic from internet. A Security Group acts as a virtual firewall that controls the traffic for one or more instances. Security groups should have restrictive ACLs to only allow incoming traffic from specific IPs to specific ports where the application is listening for connections.",
      "rule.criteria":"a7b83eef-04ca-471f-878b-57200a8afaa5",
      "searchModel.query":"config where cloud.type = 'aws' AND api.name = 'aws-ec2-describe-security-groups' AND json.rule = 'ipPermissions[*].ipRanges[*] contains 0.0.0.0\/0 or ipPermissions[*].ipv6Ranges[*].cidrIpv6 contains ::\/0'",
      "recommendation":"If the Security Groups reported indeed need to restrict all traffic, follow the instructions below:\n1. Log in to the AWS console\n2. In the console, select the specific region from region drop down on the top right corner, for which the alert is generated\n3. Navigate to the 'VPC' service\n4. Click on the 'Security Group' specific to the alert\n5. Click on 'Inbound Rules' and remove the row with the ip value as 0.0.0.0\/0 or ::\/0",
      "remediable":true,
      "remediation.cliScriptTemplate":"aws --region ${region} ec2 revoke-security-group-ingress --group-id ${resourceId} --ip-permissions '[{\"IpProtocol\": \"${protocol}\", \"FromPort\": ${fromPort}, \"ToPort\": ${toPort}, \"Ip${ipV4\/6}Ranges\":[{\"CidrIp${ipV4\/6}\":\"${cidr}\"}]}]'",
      "remediation.description":"\"This CLI command requires 'ec2:RevokeSecurityGroupIngress' permission. Successful execution will update the security group to revoke the ingress rule records open to internet either on IPv4 or on IPv6 protocol.\"}",
      "remediation.impact":"reject all traffic from internet",
      "compliance.standard":[
        "PCI DSS v3.2",
        "NIST CSF",
        "SOC 2",
        "GDPR",
        "NIST 800-53 Rev4",
        "ISO 27001:2013",
        "HITRUST CSF v9.3",
        "MITRE ATT&CK [Beta]",
        "PIPEDA",
        "CCPA 2018",
        "CSA CCM v3.0.1",
        "NIST 800-171 Rev1"
      ],
      "searchModel.query_updated":"config where cloud.type = 'aws' AND api.name = 'aws-ec2-describe-security-groups' AND json.rule = '(ipPermissions[*].ipRanges[*] contains 0.0.0.0\/0 or ipPermissions[*].ipv6Ranges[*].cidrIpv6 contains ::\/0) and isShared is false'"
    }
  ],
  "5":[
    {
      "policyId":"f57baa2a-6039-4a17-94e8-0be723bcdc75",
      "policyType":"config",
      "cloudType":"gcp",
      "severity":"medium",
      "name":"GCP Kubernetes Engine Clusters have Legacy Authorization enabled",
      "description":"This policy identifies GCP Kubernetes Engine Clusters which have enabled legacy authorizer. The legacy authorizer in Kubernetes Engine grants broad and statically defined permissions to all cluster users. After legacy authorizer setting is disabled, RBAC can limit permissions for authorized users based on need.",
      "rule.criteria":"9c835b12-e60a-4590-9e5e-5dd959774d71",
      "searchModel.query":"config where cloud.type = 'gcp' AND api.name = 'gcloud-container-describe-clusters' AND json.rule = 'legacyAbac.enabled equals true'",
      "recommendation":"1. Login to GCP Portal\n2. Go to Kubernetes Engine (Left Panel)\n3. Select Kubernetes clusters \n4. From the list of clusters, choose the reported cluster\n5. Click on EDIT button\n6. Set 'Legacy Authorization' to Disabled\n7. Click on Save",
      "remediable":false,
      "remediation.cliScriptTemplate":"",
      "remediation.description":"",
      "remediation.impact":"",
      "compliance.standard":[
        "HIPAA",
        "PCI DSS v3.2",
        "CIS v1.0.0 (GCP)",
        "NIST 800-53 Rev4",
        "ISO 27001:2013",
        "PIPEDA",
        "CCPA 2018",
        "SOC 2"
      ],
      "remediable_updated":true,
      "remediation.cliScriptTemplate_updated":"gcloud container clusters update ${resourceName} --project=${account} --zone ${region} --no-enable-legacy-authorization",
      "remediation.description_updated":"This CLI command requires 'container.clusters.update' permission. Successful execution will disable Legacy Authorization for GCP Kubernetes Engine cluster which helps RBAC to limit permissions for authorized users based on need.",
      "remediation.impact_updated":"disables Legacy Authorization in GCP Kubernetes Engine cluster"
    }
  ],
  "6":[
    {
      "policyId":"89ea62c1-3845-4134-b337-cc82203b8ff9",
      "policyType":"config",
      "cloudType":"aws",
      "severity":"medium",
      "name":"AWS S3 Object Versioning is disabled",
      "description":"This policy identifies the S3 buckets which have Object Versioning disabled. S3 Object Versioning is an important capability in protecting your data within a bucket. Once you enable Object Versioning, you cannot remove it; you can suspend Object Versioning at any time on a bucket if you do not wish for it to persist. It is recommended to enable Object Versioning on S3.",
      "rule.criteria":"8ec3f878-0f5e-4782-b4cd-98018b217be5",
      "searchModel.query":"config where cloud.type = 'aws' AND api.name = 'aws-s3api-get-bucket-acl' AND json.rule = 'versioningConfiguration.status!=Enabled'",
      "recommendation":"1. Log into your AWS Console and select the S3 service.\n2. Choose the reported S3 bucket and click the Properties tab in the upper right frame.\n3. Expand the Versioning option\n4. Click Enable Versioning\n5. Click Save",
      "remediable":false,
      "remediation.cliScriptTemplate":"",
      "remediation.description":"",
      "remediation.impact":"",
      "compliance.standard":[
        "MITRE ATT&CK [Beta]"
      ],
      "remediable_updated":true,
      "remediation.cliScriptTemplate_updated":"aws s3api put-bucket-versioning --bucket ${resourceName} --region ${region} --versioning-configuration Status=Enabled",
      "remediation.description_updated":"This CLI command requires 's3:PutBucketVersioning' permission. Successful execution will enable Object Versioning for the respective S3 bucket.",
      "remediation.impact_updated":"Enable Object Versioning for the respective S3"
    }
  ],
  "7":[
    {
      "policyId":"cdcd663c-e9c9-4472-9779-e5f38751524a",
      "policyType":"config",
      "cloudType":"aws",
      "severity":"high",
      "name":"AWS Security Groups allow internet traffic from internet to FTP-Data port (20)",
      "description":"This policy identifies the security groups which are exposing FTP-Data port (20) to the internet. It is recommended that Global permission to access the well known services FTP-Data port (20) should not be allowed in a security group.",
      "rule.criteria":"42bb8b7f-5cbb-419d-bfb9-d159189fbba2",
      "searchModel.query":"config where cloud.type = 'aws' AND api.name='aws-ec2-describe-security-groups' AND json.rule = (((ipPermissions[?(@.toPort > 20 && @.fromPort < 20)].ipRanges[*] contains 0.0.0.0\/0) or (ipPermissions[?(@.toPort == 20 || @.fromPort == 20)].ipRanges[*] contains 0.0.0.0\/0)) or ((ipPermissions[?(@.toPort > 20 && @.fromPort < 20)].ipv6Ranges[*].cidrIpv6 contains ::\/0) or (ipPermissions[?(@.toPort == 20 || @.fromPort == 20)].ipv6Ranges[*].cidrIpv6 contains ::\/0)))",
      "recommendation":"If the Security Groups reported indeed need to restrict all traffic, follow the instructions below:\n\n1. Login to the AWS Console and navigate to the 'VPC' service\n2. Select the 'Security Group' reported in the alert. Click on the 'Inbound Rule'\n3. Remove the rule which has 'Source' value as 0.0.0.0\/0 or ::\/0 and 'Port Range' value as 20 (or range containing 20)",
      "remediable":false,
      "remediation.cliScriptTemplate":"",
      "remediation.description":"",
      "remediation.impact":"",
      "compliance.standard":[
        "MITRE ATT&CK [Beta]",
        "PIPEDA",
        "CCPA 2018"
      ],
      "searchModel.query_updated":"config where cloud.type = 'aws' AND api.name='aws-ec2-describe-security-groups' AND json.rule = (((ipPermissions[?(@.toPort > 20 && @.fromPort < 20)].ipRanges[*] contains 0.0.0.0\/0) or (ipPermissions[?(@.toPort == 20 || @.fromPort == 20)].ipRanges[*] contains 0.0.0.0\/0)) or ((ipPermissions[?(@.toPort > 20 && @.fromPort < 20)].ipv6Ranges[*].cidrIpv6 contains ::\/0) or (ipPermissions[?(@.toPort == 20 || @.fromPort == 20)].ipv6Ranges[*].cidrIpv6 contains ::\/0))) and isShared is false"
    }
  ],
  "8":[
    {
      "policyId":"cb8a243b-c110-4cf0-b5a2-f27f35fc39b3",
      "policyType":"config",
      "cloudType":"azure",
      "severity":"medium",
      "name":"VPN is not configured with cryptographic algorithm",
      "description":"Azure VPN gateways to use a custom IPsec\/IKE policy with specific cryptographic algorithms and key strengths, rather than the Azure default policy sets. IPsec and IKE protocol standard supports a wide range of cryptographic algorithms in various combinations. If customers do not request a specific combination of cryptographic algorithms and parameters, Azure VPN gateways use a set of default proposals. Typically due to compliance or security requirements, you can now configure your Azure VPN gateways to use a custom IPsec\/IKE policy with specific cryptographic algorithms and key strengths, rather than the Azure default policy sets. It is thus recommended to use custom policy sets and choose strong cryptography.",
      "rule.criteria":"f3ef9435-8080-45ec-ad14-8850b39052ae",
      "searchModel.query":"config where api.name = 'azure-network-vpn-connection-list' AND json.rule = 'ipsecPolicies isEmpty'",
      "recommendation":"Follow Microsoft Azure documentation and setup your respective VPN connections using strong recommended cryptographic requirements.\nFMI: https:\/\/docs.microsoft.com\/en-us\/azure\/vpn-gateway\/vpn-gateway-about-compliance-crypto#cryptographic-requirements",
      "remediable":false,
      "remediation.cliScriptTemplate":"",
      "remediation.description":"",
      "remediation.impact":"",
      "compliance.standard":[
        "HIPAA",
        "PCI DSS v3.2",
        "NIST 800-53 Rev4",
        "ISO 27001:2013",
        "HITRUST CSF v9.3",
        "GDPR",
        "PIPEDA",
        "CCPA 2018",
        "MITRE ATT&CK [Beta]"
      ],
      "name_updated":"Azure VPN is not configured with cryptographic algorithm",
      "description_updated":"This policy identifies Azure VPNs which are not configured with cryptographic algorithm. Azure VPN gateways to use a custom IPsec\/IKE policy with specific cryptographic algorithms and key strengths, rather than the Azure default policy sets. IPsec and IKE protocol standard supports a wide range of cryptographic algorithms in various combinations. If customers do not request a specific combination of cryptographic algorithms and parameters, Azure VPN gateways use a set of default proposals. Typically due to compliance or security requirements, you can now configure your Azure VPN gateways to use a custom IPsec\/IKE policy with specific cryptographic algorithms and key strengths, rather than the Azure default policy sets. It is thus recommended to use custom policy sets and choose strong cryptography.",
      "searchModel.query_updated":"config where cloud.type = 'azure' AND api.name = 'azure-network-vpn-connection-list' AND json.rule = 'ipsecPolicies is empty and connectionType does not equal ExpressRoute'"
    }
  ],
  "9":[
    {
      "policyId":"14d10ad2-51df-4b07-be69-e94951cc7067",
      "policyType":"config",
      "cloudType":"aws",
      "severity":"high",
      "name":"AWS Security Groups allow internet traffic from internet to FTP port (21)",
      "description":"This policy identifies the security groups which are exposing FTP port (21) to the internet. It is recommended that Global permission to access the well known services FTP port (21) should not be allowed in a security group.",
      "rule.criteria":"42122a9d-6cc5-4a47-b7d1-cbfe136c25e7",
      "searchModel.query":"config where cloud.type = 'aws' AND api.name='aws-ec2-describe-security-groups' AND json.rule = (((ipPermissions[?(@.toPort > 21 && @.fromPort < 21)].ipRanges[*] contains 0.0.0.0\/0) or (ipPermissions[?(@.toPort == 21 || @.fromPort == 21)].ipRanges[*] contains 0.0.0.0\/0)) or ((ipPermissions[?(@.toPort > 21 && @.fromPort < 21)].ipv6Ranges[*].cidrIpv6 contains ::\/0) or (ipPermissions[?(@.toPort == 21 || @.fromPort == 21)].ipv6Ranges[*].cidrIpv6 contains ::\/0)))",
      "recommendation":"If the Security Groups reported indeed need to restrict all traffic, follow the instructions below:\n\n1. Login to the AWS Console and navigate to the 'VPC' service\n2. Select the 'Security Group' reported in the alert. Click on the 'Inbound Rule'\n3. Remove the rule which has 'Source' value as 0.0.0.0\/0 or ::\/0 and 'Port Range' value as 21 (or range containing 21)",
      "remediable":false,
      "remediation.cliScriptTemplate":"",
      "remediation.description":"",
      "remediation.impact":"",
      "compliance.standard":[
        "MITRE ATT&CK [Beta]",
        "PIPEDA",
        "CCPA 2018"
      ],
      "searchModel.query_updated":"config where cloud.type = 'aws' AND api.name='aws-ec2-describe-security-groups' AND json.rule = (((ipPermissions[?(@.toPort > 21 && @.fromPort < 21)].ipRanges[*] contains 0.0.0.0\/0) or (ipPermissions[?(@.toPort == 21 || @.fromPort == 21)].ipRanges[*] contains 0.0.0.0\/0)) or ((ipPermissions[?(@.toPort > 21 && @.fromPort < 21)].ipv6Ranges[*].cidrIpv6 contains ::\/0) or (ipPermissions[?(@.toPort == 21 || @.fromPort == 21)].ipv6Ranges[*].cidrIpv6 contains ::\/0))) and isShared is false"
    }
  ],
  "10":[
    {
      "policyId":"0408a03f-095f-4adc-8991-3b9e324a5e47",
      "policyType":"network",
      "cloudType":"all",
      "severity":"medium",
      "name":"Publicly exposed DB Ports",
      "description":"DB Servers contain sensitive data and should not be exposed to any direct traffic from internet. This policy checks for the network traffic from internet hitting the DB Servers on their default ports. The DB servers monitored on the default ports are : Microsoft SQL Server (1433), Oracle (1521), MySQL (3306), Sybase (5000), Postgresql (5432), CouchDB (5984), Redis (6379, 6380), RethinkDB (8080,28015, 29015), CassandraDB (9042), Memcached (11211), MongoDB (27017), DB2 (50000).",
      "rule.criteria":"25d0c0d7-03c1-4be2-9439-85249c4a9c23",
      "searchModel.query":"network where src.publicnetwork in ('Suspicious IPs','Internet IPs') and dest.port in (1433, 1521, 3306, 5000, 5432, 5984, 6379, 6380, 8080, 9042, 11211, 27017, 28015, 29015, 50000)",
      "recommendation":"Use the firewall\/Security group rules to specify which IP address ranges from the Internet are allowed to access Databases. Ensure that all known DB ports are restricted to the public access.\n\nFor AWS accounts:\nIn the AWS console, identify the 'Security Group' associated with the reported DB Server. Modify the inbound security rules to restrict all traffic to DB ports.\n\nFor Azure accounts:\nIn the Azure portal, identify the 'Network Security Group' associated with the reported DB Server. Modify the inbound security rules to restrict all traffic to DB ports.\n\nFor GCP accounts:\nIn the GCP console, identify the 'VPC Firewall rules' associated with the reported DB Server. Modify the inbound security rules to restrict all traffic to DB ports.",
      "remediable":false,
      "remediation.cliScriptTemplate":"",
      "remediation.description":"",
      "remediation.impact":"",
      "compliance.standard":[
        "PIPEDA",
        "CCPA 2018",
        "MITRE ATT&CK [Beta]"
      ],
      "searchModel.query_updated":"network where src.publicnetwork in ('Suspicious IPs','Internet IPs') and dest.port in (1433, 1521, 3306, 5000, 5432, 5984, 6379, 6380, 8080, 9042, 11211, 27017, 28015, 29015, 50000) AND dest.resource IN ( resource where role not in ( 'AWS ELB', 'AWS NAT Gateway' )) AND accepted.bytes > 0"
    }
  ],
  "11":[
    {
      "policyId":"89cbc2f1-fcb0-48b9-be71-4cbe2d18a5f7",
      "policyType":"config",
      "cloudType":"aws",
      "severity":"high",
      "name":"AWS Security Groups allow internet traffic from internet to VNC Server port (5900)",
      "description":"This policy identifies the security groups which are exposing VNC Server port (5900) to the internet. It is recommended that Global permission to access the well known services VNC Server port (5900) should not be allowed in a security group.",
      "rule.criteria":"bba4e627-6d5d-4214-982e-6ed4d8ac8739",
      "searchModel.query":"config where cloud.type = 'aws' AND api.name='aws-ec2-describe-security-groups' AND json.rule = (((ipPermissions[?(@.toPort > 5900 && @.fromPort < 5900)].ipRanges[*] contains 0.0.0.0\/0) or (ipPermissions[?(@.toPort == 5900 || @.fromPort == 5900)].ipRanges[*] contains 0.0.0.0\/0)) or ((ipPermissions[?(@.toPort > 5900 && @.fromPort < 5900)].ipv6Ranges[*].cidrIpv6 contains ::\/0) or (ipPermissions[?(@.toPort == 5900 || @.fromPort == 5900)].ipv6Ranges[*].cidrIpv6 contains ::\/0)))",
      "recommendation":"If the Security Groups reported indeed need to restrict all traffic, follow the instructions below:\n\n1. Login to the AWS Console and navigate to the 'VPC' service\n2. Select the 'Security Group' reported in the alert. Click on the 'Inbound Rule'\n3. Remove the rule which has 'Source' value as 0.0.0.0\/0 or ::\/0 and 'Port Range' value as 5900 (or range containing 5900)",
      "remediable":false,
      "remediation.cliScriptTemplate":"",
      "remediation.description":"",
      "remediation.impact":"",
      "compliance.standard":[
        "MITRE ATT&CK [Beta]",
        "PIPEDA",
        "CCPA 2018"
      ],
      "searchModel.query_updated":"config where cloud.type = 'aws' AND api.name='aws-ec2-describe-security-groups' AND json.rule = (((ipPermissions[?(@.toPort > 5900 && @.fromPort < 5900)].ipRanges[*] contains 0.0.0.0\/0) or (ipPermissions[?(@.toPort == 5900 || @.fromPort == 5900)].ipRanges[*] contains 0.0.0.0\/0)) or ((ipPermissions[?(@.toPort > 5900 && @.fromPort < 5900)].ipv6Ranges[*].cidrIpv6 contains ::\/0) or (ipPermissions[?(@.toPort == 5900 || @.fromPort == 5900)].ipv6Ranges[*].cidrIpv6 contains ::\/0))) and isShared is false"
    }
  ]
}