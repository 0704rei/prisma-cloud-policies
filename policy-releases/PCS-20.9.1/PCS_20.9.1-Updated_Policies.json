{
  "0":[
    {
      "policyId":"617b9138-584b-4e8e-ad15-7fbabafbed1a",
      "policyType":"config",
      "cloudType":"aws",
      "severity":"high",
      "name":"AWS Security Groups allow internet traffic to SSH port (22)",
      "description":"This policy identifies AWS Security Groups which do allow inbound traffic on SSH port (22) from public internet. Doing so, may allow a bad actor to brute force their way into the system and potentially get access to the entire network.",
      "rule.criteria":"62c42bbc-1764-408f-814c-68d2b392af1f",
      "rule.query":"config where cloud.type = 'aws' AND api.name='aws-ec2-describe-security-groups' AND json.rule = (((ipPermissions[?(@.toPort > 22 && @.fromPort < 22)].ipRanges[*] contains 0.0.0.0\/0) or (ipPermissions[?(@.toPort == 22 || @.fromPort == 22)].ipRanges[*] contains 0.0.0.0\/0)) or ((ipPermissions[?(@.toPort > 22 && @.fromPort < 22)].ipv6Ranges[*].cidrIpv6 contains ::\/0) or (ipPermissions[?(@.toPort == 22 || @.fromPort == 22)].ipv6Ranges[*].cidrIpv6 contains ::\/0)))",
      "recommendation":"If the Security Groups reported indeed need to restrict all traffic, follow the instructions below:\n1. Login to the AWS Console and navigate to the 'VPC' service\n2. Select the 'Security Group' reported in the alert. Click on the 'Inbound Rule'\n3. Remove the rule which has 'Source' value as 0.0.0.0\/0 or ::\/0 and 'Port Range' value as 22 (or range containing 22)",
      "remediable":true,
      "remediation.cliScriptTemplate":"aws --region ${region} ec2 revoke-security-group-ingress --group-id ${resourceId} --ip-permissions '[{\"IpProtocol\": \"${protocol}\", \"FromPort\": ${fromPort}, \"ToPort\": ${toPort}, \"Ip${ipV4\/6}Ranges\":[{\"CidrIp${ipV4\/6}\":\"${cidr}\"}]}]'",
      "remediation.description":"This CLI command requires 'ec2:RevokeSecurityGroupIngress' permission. Successful execution will update the security group to revoke the ingress rule records with port 22 open to internet either on IPv4 or on IPv6 protocol.",
      "remediation.impact":"reject ssh traffic for this security group",
      "compliance.standard":[
        "CIS v1.2.0 (AWS)",
        "HIPAA",
        "NIST CSF",
        "SOC 2",
        "GDPR",
        "NIST 800-53 Rev4",
        "ISO 27001:2013",
        "HITRUST CSF v9.3",
        "MITRE ATT&CK [Beta]",
        "PIPEDA",
        "CCPA 2018",
        "EN Copy of CIS v1.2.0 (AWS)",
        "CSA CCM v3.0.1",
        "NIST 800-171 Rev1"
      ],
      "rule.query_updated":"config where cloud.type = 'aws' AND api.name='aws-ec2-describe-security-groups' AND json.rule = (((ipPermissions[?(@.toPort > 22 && @.fromPort < 22)].ipRanges[*] contains 0.0.0.0\/0) or (ipPermissions[?(@.toPort == 22 || @.fromPort == 22)].ipRanges[*] contains 0.0.0.0\/0)) or ((ipPermissions[?(@.toPort > 22 && @.fromPort < 22)].ipv6Ranges[*].cidrIpv6 contains ::\/0) or (ipPermissions[?(@.toPort == 22 || @.fromPort == 22)].ipv6Ranges[*].cidrIpv6 contains ::\/0))) and isShared is false"
    }
  ],
  "1":[
    {
      "policyId":"ab8b6bb8-a730-4bdf-a4d5-080c01e97335",
      "policyType":"config",
      "cloudType":"aws",
      "severity":"high",
      "name":"AWS Security Groups allow internet traffic from internet to Windows RPC port (135)",
      "description":"This policy identifies the security groups which are exposing Windows RPC port (135) to the internet. It is recommended that Global permission to access the well known services Windows RPC port (135) should not be allowed in a security group.",
      "rule.criteria":"e1d50563-f753-4303-854a-1759bb22e180",
      "rule.query":"config where cloud.type = 'aws' AND api.name='aws-ec2-describe-security-groups' AND json.rule = (((ipPermissions[?(@.toPort > 135 && @.fromPort < 135)].ipRanges[*] contains 0.0.0.0\/0) or (ipPermissions[?(@.toPort == 135 || @.fromPort == 135)].ipRanges[*] contains 0.0.0.0\/0)) or ((ipPermissions[?(@.toPort > 135 && @.fromPort < 135)].ipv6Ranges[*].cidrIpv6 contains ::\/0) or (ipPermissions[?(@.toPort == 135 || @.fromPort == 135)].ipv6Ranges[*].cidrIpv6 contains ::\/0)))",
      "recommendation":"If the Security Groups reported indeed need to restrict all traffic, follow the instructions below:\n\n1. Login to the AWS Console and navigate to the 'VPC' service\n2. Select the 'Security Group' reported in the alert. Click on the 'Inbound Rule'\n3. Remove the rule which has 'Source' value as 0.0.0.0\/0 or ::\/0 and 'Port Range' value as 135 (or range containing 135)",
      "remediable":false,
      "remediation.cliScriptTemplate":"",
      "remediation.description":"",
      "remediation.impact":"",
      "compliance.standard":[
        "MITRE ATT&CK [Beta]",
        "PIPEDA",
        "CCPA 2018"
      ],
      "rule.query_updated":"config where cloud.type = 'aws' AND api.name='aws-ec2-describe-security-groups' AND json.rule = (((ipPermissions[?(@.toPort > 135 && @.fromPort < 135)].ipRanges[*] contains 0.0.0.0\/0) or (ipPermissions[?(@.toPort == 135 || @.fromPort == 135)].ipRanges[*] contains 0.0.0.0\/0)) or ((ipPermissions[?(@.toPort > 135 && @.fromPort < 135)].ipv6Ranges[*].cidrIpv6 contains ::\/0) or (ipPermissions[?(@.toPort == 135 || @.fromPort == 135)].ipv6Ranges[*].cidrIpv6 contains ::\/0))) and isShared is false"
    }
  ],
  "2":[
    {
      "policyId":"a9f1b983-f216-486e-b8ea-7259764fc420",
      "policyType":"config",
      "cloudType":"aws",
      "severity":"high",
      "name":"AWS Security Groups allow internet traffic from internet to NetBIOS port (138)",
      "description":"This policy identifies the security groups which are exposing NetBIOS port (138) to the internet. It is recommended that Global permission to access the well known services NetBIOS port (138) should not be allowed in a security group.",
      "rule.criteria":"ee2f4326-0800-403a-914f-f5d79317ce47",
      "rule.query":"config where cloud.type = 'aws' AND api.name='aws-ec2-describe-security-groups' AND json.rule = (((ipPermissions[?(@.toPort > 138 && @.fromPort < 138)].ipRanges[*] contains 0.0.0.0\/0) or (ipPermissions[?(@.toPort == 138 || @.fromPort == 138)].ipRanges[*] contains 0.0.0.0\/0)) or ((ipPermissions[?(@.toPort > 138 && @.fromPort < 138)].ipv6Ranges[*].cidrIpv6 contains ::\/0) or (ipPermissions[?(@.toPort == 138 || @.fromPort == 138)].ipv6Ranges[*].cidrIpv6 contains ::\/0)))",
      "recommendation":"If the Security Groups reported indeed need to restrict all traffic, follow the instructions below:\n\n1. Login to the AWS Console and navigate to the 'VPC' service\n2. Select the 'Security Group' reported in the alert. Click on the 'Inbound Rule'\n3. Remove the rule which has 'Source' value as 0.0.0.0\/0 or ::\/0 and 'Port Range' value as 138 (or range containing 138)",
      "remediable":false,
      "remediation.cliScriptTemplate":"",
      "remediation.description":"",
      "remediation.impact":"",
      "compliance.standard":[
        "MITRE ATT&CK [Beta]",
        "PIPEDA",
        "CCPA 2018"
      ],
      "rule.query_updated":"config where cloud.type = 'aws' AND api.name='aws-ec2-describe-security-groups' AND json.rule = (((ipPermissions[?(@.toPort > 138 && @.fromPort < 138)].ipRanges[*] contains 0.0.0.0\/0) or (ipPermissions[?(@.toPort == 138 || @.fromPort == 138)].ipRanges[*] contains 0.0.0.0\/0)) or ((ipPermissions[?(@.toPort > 138 && @.fromPort < 138)].ipv6Ranges[*].cidrIpv6 contains ::\/0) or (ipPermissions[?(@.toPort == 138 || @.fromPort == 138)].ipv6Ranges[*].cidrIpv6 contains ::\/0))) and isShared is false"
    }
  ],
  "3":[
    {
      "policyId":"ab7f8eda-18ab-457c-b5d3-fd4f53c722bc",
      "policyType":"config",
      "cloudType":"aws",
      "severity":"high",
      "name":"AWS Security Groups allow internet traffic from internet to MSQL port (4333)",
      "description":"This policy identifies the security groups which are exposing MSQL port (4333) to the internet. It is recommended that Global permission to access the well known services MSQL port (4333) should not be allowed in a security group.",
      "rule.criteria":"1861d9d2-cbf7-4b68-9648-267c3807178e",
      "rule.query":"config where cloud.type = 'aws' AND api.name='aws-ec2-describe-security-groups' AND json.rule = (((ipPermissions[?(@.toPort > 4333 && @.fromPort < 4333)].ipRanges[*] contains 0.0.0.0\/0) or (ipPermissions[?(@.toPort == 4333 || @.fromPort == 4333)].ipRanges[*] contains 0.0.0.0\/0)) or ((ipPermissions[?(@.toPort > 4333 && @.fromPort < 4333)].ipv6Ranges[*].cidrIpv6 contains ::\/0) or (ipPermissions[?(@.toPort == 4333 || @.fromPort == 4333)].ipv6Ranges[*].cidrIpv6 contains ::\/0)))",
      "recommendation":"If the Security Groups reported indeed need to restrict all traffic, follow the instructions below:\n\n1. Login to the AWS Console and navigate to the 'VPC' service\n2. Select the 'Security Group' reported in the alert. Click on the 'Inbound Rule'\n3. Remove the rule which has 'Source' value as 0.0.0.0\/0 or ::\/0 and 'Port Range' value as 4333 (or range containing 4333)",
      "remediable":false,
      "remediation.cliScriptTemplate":"",
      "remediation.description":"",
      "remediation.impact":"",
      "compliance.standard":[
        "MITRE ATT&CK [Beta]",
        "PIPEDA",
        "CCPA 2018"
      ],
      "rule.query_updated":"config where cloud.type = 'aws' AND api.name='aws-ec2-describe-security-groups' AND json.rule = (((ipPermissions[?(@.toPort > 4333 && @.fromPort < 4333)].ipRanges[*] contains 0.0.0.0\/0) or (ipPermissions[?(@.toPort == 4333 || @.fromPort == 4333)].ipRanges[*] contains 0.0.0.0\/0)) or ((ipPermissions[?(@.toPort > 4333 && @.fromPort < 4333)].ipv6Ranges[*].cidrIpv6 contains ::\/0) or (ipPermissions[?(@.toPort == 4333 || @.fromPort == 4333)].ipv6Ranges[*].cidrIpv6 contains ::\/0))) and isShared is false"
    }
  ],
  "4":[
    {
      "policyId":"b82f90ce-ed8b-4b49-970c-2268b0a6c2e5",
      "policyType":"config",
      "cloudType":"aws",
      "severity":"high",
      "name":"AWS Security Groups allow internet traffic from internet to RDP port (3389)",
      "description":"This policy identifies the security groups which is exposing RDP port (3389) to the internet. Security Groups do not allow inbound traffic on RDP port (3389) from public internet. Doing so, may allow a bad actor to brute force their way into the system and potentially get access to the entire network.",
      "rule.criteria":"0351493c-9989-4b33-ad86-18dbe406e710",
      "rule.query":"config where cloud.type = 'aws' AND api.name='aws-ec2-describe-security-groups' AND json.rule = (((ipPermissions[?(@.toPort > 3389 && @.fromPort < 3389)].ipRanges[*] contains 0.0.0.0\/0) or (ipPermissions[?(@.toPort == 3389 || @.fromPort == 3389)].ipRanges[*] contains 0.0.0.0\/0)) or ((ipPermissions[?(@.toPort > 3389 && @.fromPort < 3389)].ipv6Ranges[*].cidrIpv6 contains ::\/0) or (ipPermissions[?(@.toPort == 3389 || @.fromPort == 3389)].ipv6Ranges[*].cidrIpv6 contains ::\/0)))",
      "recommendation":"If the Security Groups reported indeed need to restrict all traffic, follow the instructions below:\n1. Login to the AWS Console and navigate to the 'VPC' service\n2. Select the 'Security Group' reported in the alert. Click on the 'Inbound Rule'\n3. Remove the rule which has 'Source' value as 0.0.0.0\/0 or ::\/0 and 'Port Range' value as 3389 (or range containing 3389)",
      "remediable":true,
      "remediation.cliScriptTemplate":"aws --region ${region} ec2 revoke-security-group-ingress --group-id ${resourceId} --ip-permissions '[{\"IpProtocol\": \"${protocol}\", \"FromPort\": ${fromPort}, \"ToPort\": ${toPort}, \"Ip${ipV4\/6}Ranges\":[{\"CidrIp${ipV4\/6}\":\"${cidr}\"}]}]'",
      "remediation.description":"This CLI command requires 'ec2:RevokeSecurityGroupIngress' permission. Successful execution will update the security group to revoke the ingress rule records with port 3389 open to internet either on IPv4 or on IPv6 protocol.",
      "remediation.impact":"reject rdp traffic for this security group",
      "compliance.standard":[
        "CIS v1.2.0 (AWS)",
        "HIPAA",
        "NIST CSF",
        "SOC 2",
        "GDPR",
        "NIST 800-53 Rev4",
        "ISO 27001:2013",
        "HITRUST CSF v9.3",
        "MITRE ATT&CK [Beta]",
        "PIPEDA",
        "CCPA 2018",
        "EN Copy of CIS v1.2.0 (AWS)",
        "CSA CCM v3.0.1",
        "NIST 800-171 Rev1"
      ],
      "rule.query_updated":"config where cloud.type = 'aws' AND api.name='aws-ec2-describe-security-groups' AND json.rule = (((ipPermissions[?(@.toPort > 3389 && @.fromPort < 3389)].ipRanges[*] contains 0.0.0.0\/0) or (ipPermissions[?(@.toPort == 3389 || @.fromPort == 3389)].ipRanges[*] contains 0.0.0.0\/0)) or ((ipPermissions[?(@.toPort > 3389 && @.fromPort < 3389)].ipv6Ranges[*].cidrIpv6 contains ::\/0) or (ipPermissions[?(@.toPort == 3389 || @.fromPort == 3389)].ipv6Ranges[*].cidrIpv6 contains ::\/0))) and isShared is false"
    }
  ],
  "5":[
    {
      "policyId":"519456f2-f9eb-407b-b32d-064f1ac7f0ca",
      "policyType":"config",
      "cloudType":"aws",
      "severity":"high",
      "name":"AWS Security Groups allow internet traffic from internet to Telnet port (23)",
      "description":"This policy identifies the security groups which are exposing Telnet port (23) to the internet. It is recommended that Global permission to access the well known services Telnet port (23) should not be allowed in a security group.",
      "rule.criteria":"d0aba422-d729-45c6-8e5a-85e5de369e08",
      "rule.query":"config where cloud.type = 'aws' AND api.name='aws-ec2-describe-security-groups' AND json.rule = (((ipPermissions[?(@.toPort > 23 && @.fromPort < 23)].ipRanges[*] contains 0.0.0.0\/0) or (ipPermissions[?(@.toPort == 23 || @.fromPort == 23)].ipRanges[*] contains 0.0.0.0\/0)) or ((ipPermissions[?(@.toPort > 23 && @.fromPort < 23)].ipv6Ranges[*].cidrIpv6 contains ::\/0) or (ipPermissions[?(@.toPort == 23 || @.fromPort == 23)].ipv6Ranges[*].cidrIpv6 contains ::\/0)))",
      "recommendation":"If the Security Groups reported indeed need to restrict all traffic, follow the instructions below:\n\n1. Login to the AWS Console and navigate to the 'VPC' service\n2. Select the 'Security Group' reported in the alert. Click on the 'Inbound Rule'\n3. Remove the rule which has 'Source' value as 0.0.0.0\/0 or ::\/0 and 'Port Range' value as 23 (or range containing 23)",
      "remediable":false,
      "remediation.cliScriptTemplate":"",
      "remediation.description":"",
      "remediation.impact":"",
      "compliance.standard":[
        "MITRE ATT&CK [Beta]",
        "PIPEDA",
        "CCPA 2018"
      ],
      "rule.query_updated":"config where cloud.type = 'aws' AND api.name='aws-ec2-describe-security-groups' AND json.rule = (((ipPermissions[?(@.toPort > 23 && @.fromPort < 23)].ipRanges[*] contains 0.0.0.0\/0) or (ipPermissions[?(@.toPort == 23 || @.fromPort == 23)].ipRanges[*] contains 0.0.0.0\/0)) or ((ipPermissions[?(@.toPort > 23 && @.fromPort < 23)].ipv6Ranges[*].cidrIpv6 contains ::\/0) or (ipPermissions[?(@.toPort == 23 || @.fromPort == 23)].ipv6Ranges[*].cidrIpv6 contains ::\/0))) and isShared is false"
    }
  ],
  "6":[
    {
      "policyId":"1f524c07-3254-45a0-8ad7-03e29242c499",
      "policyType":"config",
      "cloudType":"aws",
      "severity":"low",
      "name":"AWS RDS instance with copy tags to snapshots disabled",
      "description":"This policy identifies RDS instances which have copy tags to snapshots disabled. Copy tags to snapshots copies all the user-defined tags from the DB instance to snapshots. Copying tags allow you to add metadata and apply access policies to your Amazon RDS resources.",
      "rule.criteria":"56b18fc7-71e4-4932-aba6-71b9d0c6cf5d",
      "rule.query":"config where cloud.type = 'aws' AND api.name = 'aws-rds-describe-db-instances' AND json.rule = 'copyTagsToSnapshot is false or copyTagsToSnapshot does not exist'",
      "recommendation":"1. Sign into the AWS console\n2. In the console, select the specific region from region drop down on the top right corner, for which the alert is generated\n3. Navigate to Amazon RDS console\n4. Choose Instances, and then select the reported DB instance\n5. On 'Instance Actions' drop-down list, choose 'Modify'\n6. In 'Backup' section for the 'Copy tags to snapshots', select 'Yes'\n7. Click on 'Continue'\n8. On the 'Summary of Modifications' panel, review the configuration changes. From 'Scheduling of Modifications' section, select whether changes to 'Apply immediately' or 'Apply during the next scheduled maintenance window'.\n9. On the confirmation page, Review the changes and Click on 'Modify DB Instance' to save your changes.",
      "remediable":true,
      "remediation.cliScriptTemplate":"aws rds modify-db-instance --region ${region} --db-instance-identifier ${resourceName} --copy-tags-to-snapshot --apply-immediately",
      "remediation.description":"This CLI command requires 'rds:ModifyDBInstance' permission. Successful execution will enable 'copy tags to snapshots' for the respective RDS.",
      "remediation.impact":"Enable copy tags to snapshots for the respective RDS",
      "compliance.standard":"",
      "rule.query_updated":"config where cloud.type = 'aws' AND api.name = 'aws-rds-describe-db-instances' AND json.rule = '(copyTagsToSnapshot is false or copyTagsToSnapshot does not exist) and engine does not contain aurora'"
    }
  ],
  "7":[
    {
      "policyId":"8dd9e369-0c09-4477-97a2-ff0d50507fe2",
      "policyType":"config",
      "cloudType":"aws",
      "severity":"high",
      "name":"AWS Security Groups allow internet traffic from internet to VNC Listener port (5500)",
      "description":"This policy identifies the security groups which are exposing VNC Listener port (5500) to the internet. It is recommended that Global permission to access the well known services VNC Listener port (5500) should not be allowed in a security group.",
      "rule.criteria":"d6d77746-0771-4fda-8155-a74bbfdc9dbf",
      "rule.query":"config where cloud.type = 'aws' AND api.name='aws-ec2-describe-security-groups' AND json.rule = (((ipPermissions[?(@.toPort > 5500 && @.fromPort < 5500)].ipRanges[*] contains 0.0.0.0\/0) or (ipPermissions[?(@.toPort == 5500 || @.fromPort == 5500)].ipRanges[*] contains 0.0.0.0\/0)) or ((ipPermissions[?(@.toPort > 5500 && @.fromPort < 5500)].ipv6Ranges[*].cidrIpv6 contains ::\/0) or (ipPermissions[?(@.toPort == 5500 || @.fromPort == 5500)].ipv6Ranges[*].cidrIpv6 contains ::\/0)))",
      "recommendation":"If the Security Groups reported indeed need to restrict all traffic, follow the instructions below:\n\n1. Login to the AWS Console and navigate to the 'VPC' service\n2. Select the 'Security Group' reported in the alert. Click on the 'Inbound Rule'\n3. Remove the rule which has 'Source' value as 0.0.0.0\/0 or ::\/0 and 'Port Range' value as 5500 (or range containing 5500)",
      "remediable":false,
      "remediation.cliScriptTemplate":"",
      "remediation.description":"",
      "remediation.impact":"",
      "compliance.standard":[
        "MITRE ATT&CK [Beta]",
        "PIPEDA",
        "CCPA 2018"
      ],
      "rule.query_updated":"config where cloud.type = 'aws' AND api.name='aws-ec2-describe-security-groups' AND json.rule = (((ipPermissions[?(@.toPort > 5500 && @.fromPort < 5500)].ipRanges[*] contains 0.0.0.0\/0) or (ipPermissions[?(@.toPort == 5500 || @.fromPort == 5500)].ipRanges[*] contains 0.0.0.0\/0)) or ((ipPermissions[?(@.toPort > 5500 && @.fromPort < 5500)].ipv6Ranges[*].cidrIpv6 contains ::\/0) or (ipPermissions[?(@.toPort == 5500 || @.fromPort == 5500)].ipv6Ranges[*].cidrIpv6 contains ::\/0))) and isShared is false"
    }
  ],
  "8":[
    {
      "policyId":"ee03a420-89d6-4745-a0ac-98878cb56cf4",
      "policyType":"config",
      "cloudType":"aws",
      "severity":"high",
      "name":"AWS Security Groups allow internet traffic from internet to SQLServer port (1434)",
      "description":"This policy identifies the security groups which are exposing SQLServer port (1434) to the internet. It is recommended that Global permission to access the well known services SQLServer port (1434) should not be allowed in a security group.",
      "rule.criteria":"19da9a13-7274-47f6-b066-d61ef65c4161",
      "rule.query":"config where cloud.type = 'aws' AND api.name='aws-ec2-describe-security-groups' AND json.rule = (((ipPermissions[?(@.toPort > 1434 && @.fromPort < 1434)].ipRanges[*] contains 0.0.0.0\/0) or (ipPermissions[?(@.toPort == 1434 || @.fromPort == 1434)].ipRanges[*] contains 0.0.0.0\/0)) or ((ipPermissions[?(@.toPort > 1434 && @.fromPort < 1434)].ipv6Ranges[*].cidrIpv6 contains ::\/0) or (ipPermissions[?(@.toPort == 1434 || @.fromPort == 1434)].ipv6Ranges[*].cidrIpv6 contains ::\/0)))",
      "recommendation":"If the Security Groups reported indeed need to restrict all traffic, follow the instructions below:\n\n1. Login to the AWS Console and navigate to the 'VPC' service\n2. Select the 'Security Group' reported in the alert. Click on the 'Inbound Rule'\n3. Remove the rule which has 'Source' value as 0.0.0.0\/0 or ::\/0 and 'Port Range' value as 1434 (or range containing 1434)",
      "remediable":false,
      "remediation.cliScriptTemplate":"",
      "remediation.description":"",
      "remediation.impact":"",
      "compliance.standard":[
        "MITRE ATT&CK [Beta]",
        "PIPEDA",
        "CCPA 2018"
      ],
      "rule.query_updated":"config where cloud.type = 'aws' AND api.name='aws-ec2-describe-security-groups' AND json.rule = (((ipPermissions[?(@.toPort > 1434 && @.fromPort < 1434)].ipRanges[*] contains 0.0.0.0\/0) or (ipPermissions[?(@.toPort == 1434 || @.fromPort == 1434)].ipRanges[*] contains 0.0.0.0\/0)) or ((ipPermissions[?(@.toPort > 1434 && @.fromPort < 1434)].ipv6Ranges[*].cidrIpv6 contains ::\/0) or (ipPermissions[?(@.toPort == 1434 || @.fromPort == 1434)].ipv6Ranges[*].cidrIpv6 contains ::\/0))) and isShared is false"
    }
  ],
  "9":[
    {
      "policyId":"5cc78081-1006-4874-8b13-bd01583888c4",
      "policyType":"config",
      "cloudType":"aws",
      "severity":"medium",
      "name":"AWS EKS cluster security group overly permissive to all traffic",
      "description":"This policy identifies security group rules attached to the cluster network which allow inbound traffic on all protocols from the public internet. Doing so may allow a bad actor to brute force their way into the system and potentially get access to the entire cluster network.",
      "rule.criteria":"03c96719-f7cf-4c98-8b51-04098e035bdb",
      "rule.query":"config where api.name = 'aws-eks-describe-cluster' as X; config where api.name = 'aws-ec2-describe-security-groups' as Y; config where api.name = 'aws-ec2-describe-route-tables' as Z; filter \"($.Y.ipPermissions[*].ipv4Ranges[*] contains 0.0.0.0\/0 or $.Y.ipPermissions[*].ipv6Ranges[*] contains ::\/0) and ($.Z.routes[?(@.state=='active' && @.destinationCidrBlock=='0.0.0.0\/0')].gatewayId contains igw- or $.Z.routes[?(@.state=='active' && @.destinationIpv6CidrBlock=='::\/0')].gatewayId contains igw-) and ($.X.resourcesVpcConfig.securityGroupIds[*] contains $.Y.groupId and $.X.resourcesVpcConfig.subnetIds[*] contains $.Z.associations[*].subnetId)\"; show Y;",
      "recommendation":"To restrict Security Groups allowing all traffic, follow the instructions below:\n\n1. Log in to the AWS console and navigate to the 'VPC' service\n2. Click on the 'Security Group' specific to the alert\n3. Click on 'Inbound Rules' and remove the row with the IP value as 0.0.0.0\/0 or ::\/0\n\nTo restrict Route tables allowing all traffic configured to Internet Gateway, follow the instructions below:\n\n1. Log in to the AWS console and navigate to the 'VPC' service\n2. Select the 'Route Tables' specific to the alert\n3. Remove the row where 'Target' is 'Internet Gateway' and the 'Destination' value as 0.0.0.0\/0 or ::\/0 or mention specific IP ranges which can be allowed.\nNOTE: Make sure the impact of changes before removing or modifying the configurations.",
      "remediable":false,
      "remediation.cliScriptTemplate":"",
      "remediation.description":"",
      "remediation.impact":"",
      "compliance.standard":[
        "PIPEDA",
        "CCPA 2018"
      ],
      "rule.query_updated":"config where cloud.type = 'aws' AND api.name = 'aws-eks-describe-cluster' as X; config where api.name = 'aws-ec2-describe-security-groups' as Y; filter '$.X.resourcesVpcConfig.securityGroupIds contains $.Y.groupId and ($.Y.ipPermissions[*].ipv4Ranges[*] contains 0.0.0.0\/0 or $.Y.ipPermissions[*].ipv6Ranges[*] contains ::\/0) and $.Y.isShared is false'; show Y;"
    }
  ],
  "10":[
    {
      "policyId":"fc914428-2c9a-4240-a3a7-769b85187278",
      "policyType":"config",
      "cloudType":"azure",
      "severity":"medium",
      "name":"Azure Security Center 'Also send email notification to subscription owners' value is not set",
      "description":"This policy identifies the Azure Security Center in which 'Also send email notification to subscription owners' value is not set. Turning on 'Also send email notification to subscription owners' will enable Microsoft to send security alert emails to subscription owners. This will make sure that you are aware of any security issues and can take prompt actions to mitigate the risks.",
      "rule.criteria":"acc69a5f-d633-4a07-8697-c1ec2344788e",
      "rule.query":"config where cloud.type = 'azure' AND api.name = 'azure-security-center-settings' AND json.rule = 'securityContacts is empty or securityContacts[*].properties.email is empty or securityContacts[*].properties.alertsToAdmins equals Off'",
      "recommendation":"1. Log in to the Azure portal\n2. Go to 'Security Center'\n3. Click on 'Pricing & Settings'\n4. Click on the Subscription\n5. Click on 'Email Notification'\n6. Ensure 'Email address' is filled in\n7. Set 'Send email notification for high severity alerts' is set to 'On'\n8. Set 'Also send email notification to subscription owners' is set to 'On'",
      "remediable":false,
      "remediation.cliScriptTemplate":"",
      "remediation.description":"",
      "remediation.impact":"",
      "compliance.standard":[
        "HIPAA",
        "PCI DSS v3.2",
        "NIST 800-53 Rev4",
        "ISO 27001:2013",
        "HITRUST CSF v9.3",
        "GDPR",
        "NIST CSF",
        "CSA CCM v3.0.1",
        "CIS v1.1 (Azure)",
        "SOC 2"
      ],
      "name_updated":"Azure Security Center email notification for subscription owner is not set",
      "description_updated":"This policy identifies the Azure Security Center in which email notification for subscription owner is not set. Enabling this will enable Microsoft to send security alert emails to subscription owners. This will make sure that you are aware of any security issues and can take prompt actions to mitigate the risks.",
      "recommendation_updated":"1. Log in to the Azure portal\n2. Go to 'Security Center'\n3. Click on 'Pricing & Settings'\n4. Click on the Subscription\n5. Click on 'Email Notifications'\n6. In Section 'Email recipients', from the drop down of field 'All users with the following roles' select 'Owner'\n7. Click on 'Save'"
    }
  ],
  "11":[
    {
      "policyId":"520308c5-57e3-4061-b9bf-1ce5325a2d61",
      "policyType":"config",
      "cloudType":"aws",
      "severity":"high",
      "name":"AWS Security Groups allow internet traffic from internet to CIFS port (445)",
      "description":"This policy identifies the security groups which are exposing CIFS port (445) to the internet. It is recommended that Global permission to access the well known services CIFS port (445) should not be allowed in a security group.",
      "rule.criteria":"dfbe3e6a-5dfd-40ab-bb83-5d2763c460ef",
      "rule.query":"config where cloud.type = 'aws' AND api.name='aws-ec2-describe-security-groups' AND json.rule = (((ipPermissions[?(@.toPort > 445 && @.fromPort < 445)].ipRanges[*] contains 0.0.0.0\/0) or (ipPermissions[?(@.toPort == 445 || @.fromPort == 445)].ipRanges[*] contains 0.0.0.0\/0)) or ((ipPermissions[?(@.toPort > 445 && @.fromPort < 445)].ipv6Ranges[*].cidrIpv6 contains ::\/0) or (ipPermissions[?(@.toPort == 445 || @.fromPort == 445)].ipv6Ranges[*].cidrIpv6 contains ::\/0)))",
      "recommendation":"If the Security Groups reported indeed need to restrict all traffic, follow the instructions below:\n\n1. Login to the AWS Console and navigate to the 'VPC' service\n2. Select the 'Security Group' reported in the alert. Click on the 'Inbound Rule'\n3. Remove the rule which has 'Source' value as 0.0.0.0\/0 or ::\/0 and 'Port Range' value as 445 (or range containing 445)",
      "remediable":false,
      "remediation.cliScriptTemplate":"",
      "remediation.description":"",
      "remediation.impact":"",
      "compliance.standard":[
        "MITRE ATT&CK [Beta]",
        "PIPEDA",
        "CCPA 2018"
      ],
      "rule.query_updated":"config where cloud.type = 'aws' AND api.name='aws-ec2-describe-security-groups' AND json.rule = (((ipPermissions[?(@.toPort > 445 && @.fromPort < 445)].ipRanges[*] contains 0.0.0.0\/0) or (ipPermissions[?(@.toPort == 445 || @.fromPort == 445)].ipRanges[*] contains 0.0.0.0\/0)) or ((ipPermissions[?(@.toPort > 445 && @.fromPort < 445)].ipv6Ranges[*].cidrIpv6 contains ::\/0) or (ipPermissions[?(@.toPort == 445 || @.fromPort == 445)].ipv6Ranges[*].cidrIpv6 contains ::\/0))) and isShared is false"
    }
  ],
  "12":[
    {
      "policyId":"d9b86448-11a2-f9d4-74a5-f6fc590caeef",
      "policyType":"config",
      "cloudType":"aws",
      "severity":"low",
      "name":"AWS IAM policy allows full administrative privileges",
      "description":"This policy identifies IAM policies with full administrative privileges. IAM policies are the means by which privileges are granted to users, groups, or roles. It is recommended and considered a standard security advice to grant least privilege like granting only the permissions required to perform a task. Determine what users need to do and then craft policies for them that let the users perform only those tasks, instead of allowing full administrative privileges.",
      "rule.criteria":"ccf65e9c-8c63-4a1d-89f3-1b01ff2439b3",
      "rule.query":"config where cloud.type = 'aws' AND api.name = 'aws-iam-get-policy-version' AND json.rule =  \"document.Statement[?(@.Resource=='*' )].Action equals * and document.Statement[*].Effect equals Allow and policyArn exists and policyArn does not equal arn:aws:iam::aws:policy\/AdministratorAccess\"",
      "recommendation":"Using the GUI, perform the following to detach the policy that has full administrative privileges:\n1. Sign in to the AWS Management Console and open the IAM console at\nhttps:\/\/console.aws.amazon.com\/iam\/.\n2. In the navigation pane, click Policies and then search for the policy name found in the audit step.\n3. Select the policy that needs to be deleted.\n4. In the policy action menu, select first Detach\n5. Select all Users, Groups, Roles that have this policy attached\n6. Click Detach Policy\n7. In the policy action menu, select Detach.",
      "remediable":false,
      "remediation.cliScriptTemplate":"",
      "remediation.description":"",
      "remediation.impact":"",
      "compliance.standard":[
        "HITRUST CSF v9.3",
        "CIS v1.2.0 (AWS)",
        "NIST CSF",
        "GDPR",
        "NIST 800-53 Rev4",
        "MITRE ATT&CK [Beta]",
        "PIPEDA",
        "CCPA 2018",
        "EN Copy of CIS v1.2.0 (AWS)",
        "CSA CCM v3.0.1",
        "SOC 2",
        "NIST 800-171 Rev1"
      ],
      "rule.query_updated":"config where cloud.type = 'aws' AND api.name = 'aws-iam-get-policy-version' AND json.rule = \"document.Statement[?(@.Resource=='*' )].Action equals * and document.Statement[*].Effect equals Allow and policyArn exists and policyArn does not contain iam::aws:policy\/AdministratorAccess\""
    }
  ],
  "13":[
    {
      "policyId":"f57c13b0-6303-4ab9-8a63-2791cad113e0",
      "policyType":"config",
      "cloudType":"aws",
      "severity":"high",
      "name":"AWS Security Groups allow internet traffic to ports which are not commonly used",
      "description":"This policy identifies security groups which are exposing ports to the internet that are not covered in other policies. It is recommended that Global permission be reduced as much as possible. Ports excluded from this policy are; 20, 21, 22, 23, 25, 53, 80, 135, 137, 138, 139, 443, 445, 1433, 1434, 3306, 3389, 4333 and 5432 which are covered in other policies.",
      "rule.criteria":"d8d617a9-2ed2-4c20-85bb-db4cd38e1fa3",
      "rule.query":"config where cloud.type = 'aws' AND api.name='aws-ec2-describe-security-groups' AND json.rule = \"(ipPermissions[?(@.toPort != 80 && @.toPort != 443 && @.toPort != 22 && @.toPort != 23 && @.toPort != 3389 && @.toPort != 20 && @.toPort != 21 && @.toPort != 25 && @.toPort != 53 && @.toPort != 135 && @.toPort != 137 && @.toPort != 138 && @.toPort != 139 && @.toPort != 445 && @.toPort !=3306 && @.toPort != 1433 && @.toPort != 1434 && @.toPort != 4333 && @.toPort != 5432 && @.fromPort != 80 && @.fromPort != 443 && @.fromPort != 22 && @.fromPort != 23 && @.fromPort != 3389 && @.fromPort != 20 && @.fromPort != 21 && @.fromPort != 25 && @.fromPort != 53 && @.fromPort != 135 && @.fromPort != 137 && @.fromPort != 138 && @.fromPort != 139 && @.fromPort != 445 && @.fromPort !=3306 && @.fromPort != 1433 && @.fromPort != 1434 && @.fromPort != 4333 && @.fromPort != 5432 && @.ipProtocol=='tcp' || @.ipProtocol=='icmp' || @.ipProtocol=='icmpv6' || @.ipProtocol=='udp')].ipv6Ranges[*].cidrIpv6 contains ::\/0) or (ipPermissions[?(@.toPort != 80 && @.toPort != 443 && @.toPort != 22 && @.toPort != 23 && @.toPort != 3389 && @.toPort != 20 && @.toPort != 21 && @.toPort != 25 && @.toPort != 53 && @.toPort != 135 && @.toPort != 137 && @.toPort != 138 && @.toPort != 139 && @.toPort != 445 && @.toPort !=3306 && @.toPort != 1433 && @.toPort != 1434 && @.toPort != 4333 && @.toPort != 5432 && @.fromPort != 80 && @.fromPort != 443 && @.fromPort != 22 && @.fromPort != 23 && @.fromPort != 3389 && @.fromPort != 20 && @.fromPort != 21 && @.fromPort != 25 && @.fromPort != 53 && @.fromPort != 135 && @.fromPort != 137 && @.fromPort != 138 && @.fromPort != 139 && @.fromPort != 445 && @.fromPort !=3306 && @.fromPort != 1433 && @.fromPort != 1434 && @.fromPort != 4333 && @.fromPort != 5432 && @.ipProtocol=='tcp' || @.ipProtocol=='icmp' || @.ipProtocol=='icmpv6' || @.ipProtocol=='udp')].ipRanges[*] contains 0.0.0.0\/0)\"",
      "recommendation":"If the Security Groups reported indeed need to restrict all traffic, follow the instructions below:\n1. Log in to the AWS Console and navigate to the 'VPC' service\n2. Select the 'Security Group' reported in the alert. Click on the 'Inbound Rule'\n3. Remove the rule which has 'Source' value as 0.0.0.0\/0 or ::\/0 and 'Port Range' other than uncommon ports.",
      "remediable":false,
      "remediation.cliScriptTemplate":"",
      "remediation.description":"",
      "remediation.impact":"",
      "compliance.standard":[
        "MITRE ATT&CK [Beta]",
        "PIPEDA",
        "CCPA 2018"
      ],
      "rule.query_updated":"config where cloud.type = 'aws' AND api.name='aws-ec2-describe-security-groups' AND json.rule = \"(isShared is false and ipPermissions[?(@.toPort != 80 && @.toPort != 443 && @.toPort != 22 && @.toPort != 23 && @.toPort != 3389 && @.toPort != 20 && @.toPort != 21 && @.toPort != 25 && @.toPort != 53 && @.toPort != 135 && @.toPort != 137 && @.toPort != 138 && @.toPort != 139 && @.toPort != 445 && @.toPort !=3306 && @.toPort != 1433 && @.toPort != 1434 && @.toPort != 4333 && @.toPort != 5432 && @.fromPort != 80 && @.fromPort != 443 && @.fromPort != 22 && @.fromPort != 23 && @.fromPort != 3389 && @.fromPort != 20 && @.fromPort != 21 && @.fromPort != 25 && @.fromPort != 53 && @.fromPort != 135 && @.fromPort != 137 && @.fromPort != 138 && @.fromPort != 139 && @.fromPort != 445 && @.fromPort !=3306 && @.fromPort != 1433 && @.fromPort != 1434 && @.fromPort != 4333 && @.fromPort != 5432 && @.ipProtocol=='tcp' || @.ipProtocol=='icmp' || @.ipProtocol=='icmpv6' || @.ipProtocol=='udp')].ipv6Ranges[*].cidrIpv6 contains ::\/0) or (isShared is false and ipPermissions[?(@.toPort != 80 && @.toPort != 443 && @.toPort != 22 && @.toPort != 23 && @.toPort != 3389 && @.toPort != 20 && @.toPort != 21 && @.toPort != 25 && @.toPort != 53 && @.toPort != 135 && @.toPort != 137 && @.toPort != 138 && @.toPort != 139 && @.toPort != 445 && @.toPort !=3306 && @.toPort != 1433 && @.toPort != 1434 && @.toPort != 4333 && @.toPort != 5432 && @.fromPort != 80 && @.fromPort != 443 && @.fromPort != 22 && @.fromPort != 23 && @.fromPort != 3389 && @.fromPort != 20 && @.fromPort != 21 && @.fromPort != 25 && @.fromPort != 53 && @.fromPort != 135 && @.fromPort != 137 && @.fromPort != 138 && @.fromPort != 139 && @.fromPort != 445 && @.fromPort !=3306 && @.fromPort != 1433 && @.fromPort != 1434 && @.fromPort != 4333 && @.fromPort != 5432 && @.ipProtocol=='tcp' || @.ipProtocol=='icmp' || @.ipProtocol=='icmpv6' || @.ipProtocol=='udp')].ipRanges[*] contains 0.0.0.0\/0)\""
    }
  ],
  "14":[
    {
      "policyId":"fa6fa903-8887-49dd-917f-91687df98dd1",
      "policyType":"config",
      "cloudType":"azure",
      "severity":"medium",
      "name":"Azure SQL Database with Auditing Retention less than 90 days",
      "description":"This policy identifies SQL Databases which have Auditing Retention less than 90 days. Audit Logs can be used to check for anomalies and gives insight into suspected breaches or misuse of information and access. It is recommended to configure SQL database Audit Retention to be greater than or equal to 90 days.",
      "rule.criteria":"7422d8e8-4b0a-4bc5-9769-462b3cd1c6f6",
      "rule.query":"config where cloud.type = 'azure' AND api.name = 'azure-sql-db-list' AND json.rule = 'blobAuditPolicy does not exist or blobAuditPolicy[*] is empty or blobAuditPolicy.properties.retentionDays does not exist or (blobAuditPolicy.properties.retentionDays does not equal 0 and blobAuditPolicy.properties.retentionDays less than 90)'",
      "recommendation":"1. Log in to Azure Portal\n2. Go to SQL databases (Left Panel)\n3. Choose the reported each DB instance\n4. Under Security section, Click on 'Auditing'\n5. Set 'Auditing' to 'On'\n6. Select 'Storage Details'\n7. Configure 'Retention (days)' setting to greater than or equal to 90 days\n8. Click on 'Ok'\n9. Click on 'Save'",
      "remediable":true,
      "remediation.cliScriptTemplate":"az sql db audit-policy update --ids ${resourceId} --retention-days 90",
      "remediation.description":"This CLI command requires 'Microsoft.Sql\/servers\/databases\/auditingSettings\/*' permission. Successful execution will configure SQL Database Audit Retention to 90 days.",
      "remediation.impact":"configure SQL Database Audit Retention to 90 days",
      "compliance.standard":[
        "HIPAA",
        "PCI DSS v3.2",
        "NIST 800-53 Rev4",
        "ISO 27001:2013",
        "HITRUST CSF v9.3",
        "PIPEDA",
        "NIST CSF",
        "CCPA 2018",
        "CSA CCM v3.0.1",
        "SOC 2"
      ],
      "description_updated":"This policy identifies SQL Databases that have Auditing Retention less than 90 days. Audit Logs can be used to check for anomalies and gives insight into suspected breaches or misuse of information and access. If server auditing is enabled, it always applies to the database. The database will be audited, regardless of the database auditing settings. It is recommended to configure SQL database Audit Retention to be greater than or equal to 90 days and leave the database-level auditing disabled for all databases.",
      "rule.query_updated":"config where api.name = 'azure-sql-db-list' as X; config where api.name = 'azure-sql-server-list' AND json.rule = (serverBlobAuditingPolicy does not exist or serverBlobAuditingPolicy is empty or serverBlobAuditingPolicy.properties.retentionDays does not exist or (serverBlobAuditingPolicy.properties.state equals Enabled and serverBlobAuditingPolicy.properties.retentionDays does not equal 0 and serverBlobAuditingPolicy.properties.retentionDays less than 90)) as Y; filter '$.X.blobAuditPolicy.id contains $.Y.sqlServer.name'; show X;",
      "recommendation_updated":"If server auditing is enabled, it always applies to the database. The database will be audited, regardless of the database auditing settings. It is recommended that you enable only server-level auditing and leave the database-level auditing disabled for all databases.\n\nTo enable auditing at server level:\n1. Log in to Azure Portal\n2. Go to SQL servers\n3. Choose the reported each DB server\n4. Under Security section, Click on 'Auditing'\n5. Set 'Auditing' to 'On'\n6. Select 'Storage Details'\n7. Configure 'Retention (days)' setting to greater than or equal to 90 days\nNote: The default value for retention period is 0 (unlimited retention).\n8. Click on 'Ok'\n9. Click on 'Save'",
      "remediable_updated":false,
      "remediation.cliScriptTemplate_updated":"",
      "remediation.description_updated":"",
      "remediation.impact_updated":""
    }
  ],
  "15":[
    {
      "policyId":"760f2823-997e-495f-a538-5fb073c0ee78",
      "policyType":"config",
      "cloudType":"aws",
      "severity":"high",
      "name":"AWS Security Groups allow internet traffic from internet to SQLServer port (1433)",
      "description":"This policy identifies the security groups which are exposing SQLServer port (1433) to the internet. It is recommended that Global permission to access the well known services SQLServer port (1433) should not be allowed in a security group.",
      "rule.criteria":"458d4b94-54ff-4cb1-9313-43607d00a13a",
      "rule.query":"config where cloud.type = 'aws' AND api.name='aws-ec2-describe-security-groups' AND json.rule = (((ipPermissions[?(@.toPort > 1433 && @.fromPort < 1433)].ipRanges[*] contains 0.0.0.0\/0) or (ipPermissions[?(@.toPort == 1433 || @.fromPort == 1433)].ipRanges[*] contains 0.0.0.0\/0)) or ((ipPermissions[?(@.toPort > 1433 && @.fromPort < 1433)].ipv6Ranges[*].cidrIpv6 contains ::\/0) or (ipPermissions[?(@.toPort == 1433 || @.fromPort == 1433)].ipv6Ranges[*].cidrIpv6 contains ::\/0)))",
      "recommendation":"If the Security Groups reported indeed need to restrict all traffic, follow the instructions below:\n\n1. Login to the AWS Console and navigate to the 'VPC' service\n2. Select the 'Security Group' reported in the alert. Click on the 'Inbound Rule'\n3. Remove the rule which has 'Source' value as 0.0.0.0\/0 or ::\/0 and 'Port Range' value as 1433 (or range containing 1433)",
      "remediable":false,
      "remediation.cliScriptTemplate":"",
      "remediation.description":"",
      "remediation.impact":"",
      "compliance.standard":[
        "MITRE ATT&CK [Beta]",
        "PIPEDA",
        "CCPA 2018"
      ],
      "rule.query_updated":"config where cloud.type = 'aws' AND api.name='aws-ec2-describe-security-groups' AND json.rule = (((ipPermissions[?(@.toPort > 1433 && @.fromPort < 1433)].ipRanges[*] contains 0.0.0.0\/0) or (ipPermissions[?(@.toPort == 1433 || @.fromPort == 1433)].ipRanges[*] contains 0.0.0.0\/0)) or ((ipPermissions[?(@.toPort > 1433 && @.fromPort < 1433)].ipv6Ranges[*].cidrIpv6 contains ::\/0) or (ipPermissions[?(@.toPort == 1433 || @.fromPort == 1433)].ipv6Ranges[*].cidrIpv6 contains ::\/0))) and isShared is false"
    }
  ],
  "16":[
    {
      "policyId":"5599b97c-2965-4fd2-9370-927c368abd2d",
      "policyType":"config",
      "cloudType":"aws",
      "severity":"high",
      "name":"AWS Security Groups allow internet traffic from internet to NetBIOS port (137)",
      "description":"This policy identifies the security groups which are exposing NetBIOS port (137) to the internet. It is recommended that Global permission to access the well known services NetBIOS port (137) should not be allowed in a security group.",
      "rule.criteria":"49d9bf0b-9760-4e09-930c-1286cff6c208",
      "rule.query":"config where cloud.type = 'aws' AND api.name='aws-ec2-describe-security-groups' AND json.rule = (((ipPermissions[?(@.toPort > 137 && @.fromPort < 137)].ipRanges[*] contains 0.0.0.0\/0) or (ipPermissions[?(@.toPort == 137 || @.fromPort == 137)].ipRanges[*] contains 0.0.0.0\/0)) or ((ipPermissions[?(@.toPort > 137 && @.fromPort < 137)].ipv6Ranges[*].cidrIpv6 contains ::\/0) or (ipPermissions[?(@.toPort == 137 || @.fromPort == 137)].ipv6Ranges[*].cidrIpv6 contains ::\/0)))",
      "recommendation":"If the Security Groups reported indeed need to restrict all traffic, follow the instructions below:\n\n1. Login to the AWS Console and navigate to the 'VPC' service\n2. Select the 'Security Group' reported in the alert. Click on the 'Inbound Rule'\n3. Remove the rule which has 'Source' value as 0.0.0.0\/0 or ::\/0 and 'Port Range' value as 137 (or range containing 137)",
      "remediable":false,
      "remediation.cliScriptTemplate":"",
      "remediation.description":"",
      "remediation.impact":"",
      "compliance.standard":[
        "MITRE ATT&CK [Beta]",
        "PIPEDA",
        "CCPA 2018"
      ],
      "rule.query_updated":"config where cloud.type = 'aws' AND api.name='aws-ec2-describe-security-groups' AND json.rule = (((ipPermissions[?(@.toPort > 137 && @.fromPort < 137)].ipRanges[*] contains 0.0.0.0\/0) or (ipPermissions[?(@.toPort == 137 || @.fromPort == 137)].ipRanges[*] contains 0.0.0.0\/0)) or ((ipPermissions[?(@.toPort > 137 && @.fromPort < 137)].ipv6Ranges[*].cidrIpv6 contains ::\/0) or (ipPermissions[?(@.toPort == 137 || @.fromPort == 137)].ipv6Ranges[*].cidrIpv6 contains ::\/0))) and isShared is false"
    }
  ]
}