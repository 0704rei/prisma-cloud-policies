{
  "policyUpi": "",
  "policyId": "388202e0-e57b-44cb-ae81-e2d164a67b24",
  "policyType": "iam",
  "cloudType": "aws",
  "severity": "medium",
  "name": "AWS Lambda with IAM role attached has credentials exposure permissions",
  "description": "This IAM policy serves as an impenetrable shield for your AWS Lambda resources. It empowers your Lambda functions to wield powerful capabilities, seamlessly orchestrating tasks such as secure communication, user authentication, and data protection. This policy acts as a sentinel, guarding against potential attempts to acquire sensitive login tokens, thus ensuring the sanctity of your critical services. With its astute vigilance, your Lambda environment remains impervious to unauthorized access and unwarranted data exposure, bolstering the robustness and integrity of your cloud ecosystem",
  "rule.criteria": "388202e0-e57b-44cb-ae81-e2d164a67b24",
  "searchModel.query": "config from iam where dest.cloud.type = 'AWS' AND action.name IN ('chime:createapikey', 'codepipeline:pollforjobs', 'cognito-identity:getopenidtoken', 'cognito-identity:getopenidtokenfordeveloperidentity', 'cognito-identity:getcredentialsforidentity', 'connect:getfederationtoken', 'connect:getfederationtokens', 'ec2:getpassworddata', 'ecr:getauthorizationtoken', 'gamelift:requestuploadcredentials', 'iam:createaccesskey', 'iam:createloginprofile', 'iam:createservicespecificcredential', 'iam:resetservicespecificcredential', 'iam:updateaccesskey', 'lightsail:getinstanceaccessdetails', 'lightsail:getrelationaldatabasemasteruserpassword', 'rds-db:connect', 'redshift:getclustercredentials', 'sso:getrolecredentials', 'mediapackage:rotatechannelcredentials', 'mediapackage:rotateingestendpointcredentials', 'sts:assumerole', 'sts:assumerolewithsaml', 'sts:assumerolewithwebidentity', 'sts:getfederationtoken', 'sts:getsessiontoken') AND source.cloud.service.name = 'lambda'",
  "recommendation": "Remediation steps:\n1. Log in to the AWS console\n2. Navigate to the EC2 instance\n3. Find the role used by the EC2 instance\n4. Navigate to the IAM service\n5. Click on Roles\n6. Choose the relevant role\n7. Under ''Permissions policies'', find the relevant policy according to the alert details and remove the risky actions",
  "remediable": true,
  "remediation.cliScriptTemplate": "dynamic aws cli commands",
  "remediation.description": "List of CLI commands are generated dynamically based on the violating resource. Successful execution will limit the relevant permissions of the violating resource.",
  "remediation.impact": "limit the relevant permissions of the violating resource",
  "compliance.standard": ""
}