{
  "policyUpi": "",
  "policyId": "dd52863a-1820-4e5b-890a-8a084477c4a1",
  "policyType": "iam",
  "cloudType": "aws",
  "severity": "medium",
  "name": "AWS IAM policy allows Privilege escalation via PassRole & Lambda create Function & add permissions",
  "description": "With access to the iam:PassRole, lambda:AddPermission, and lambda:CreateFunction permissions, an adversary can create a Lambda function with a more privileged existing role. This function could then by updated with lambda:AddPermission to allow another principal in another AWS account the permission to invoke it. This would allow an adversary to escalate privileges to the more privileged role.",
  "rule.criteria": "dd52863a-1820-4e5b-890a-8a084477c4a1",
  "searchModel.query": "config from iam where action.name CONTAINS ALL ( 'iam:PassRole', 'lambda:AddPermission', 'lambda:CreateFunction') AND dest.cloud.wildcardscope = true and grantedby.cloud.policy.condition ('iam:PassedToService') does not exist",
  "recommendation": "Do not use wildcards in a policy's statement Resource element with these permissions, as it creates a risk\nof Privilege Escalation.  If identity requires the use of these permissions to pass a role to a Lambda function, make sure the policy is scoped to only the resources needed.  See the following example:  https://aws.amazon.com/premiumsupport/knowledge-center/granular-access-lambda/\n\nRemediation steps:\n1. Log in to the AWS console\n2. Navigate to the Lambda Function\n3. Find the role used by the Lambda Function\n4. Navigate to the IAM service\n5. Click on Roles\n6. Choose the relevant role\n7. Under ''Permissions policies'', find the relevant policy according to the alert details and remove the risky actions",
  "remediable": true,
  "remediation.cliScriptTemplate": "dynamic aws cli commands",
  "remediation.description": "List of CLI commands are generated dynamically based on the violating resource. Successful execution will limit the relevant permissions of the violating resource.",
  "remediation.impact": "limit the relevant permissions of the violating resource",
  "compliance.standard": ""
}